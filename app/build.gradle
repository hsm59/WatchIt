buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.25.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.hussainmukadam.watchit"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 8
        versionName "1.0.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [api_key_crashlytics: FABRIC_API_KEY]
    }
    buildTypes {
        debug {
//            minifyEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'baseUrl', '"https://api.themoviedb.org/3/"'
            buildConfigField 'String', 'apiKey', TMDB_API_KEY
            buildConfigField 'String', 'imageBaseUrl', '"http://image.tmdb.org/t/p/w342/"'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'baseUrl', '"https://api.themoviedb.org/3/"'
            buildConfigField 'String', 'apiKey', TMDB_API_KEY
            buildConfigField 'String', 'imageBaseUrl', '"http://image.tmdb.org/t/p/w342/"'
        }
    }
}

ext {
    supportLibVersion = "27.1.0"
    picassoLibVersion = "2.5.2"
    retrofitLibVersion = "2.3.0"
    loggingLibVersion = "3.6.0"
    butterknifeLibVer = "8.8.1"
    leakCanaryVersion = "1.5.1"
    lottieVersion = "2.1.0"
    swipeCardsVersion = "1.0.9@aar"
    realmAdapterVersion = "2.1.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:support-vector-drawable:${supportLibVersion}"
    implementation "com.android.support:preference-v7:${supportLibVersion}"
    implementation "com.android.support:preference-v14:${supportLibVersion}"

    implementation 'com.google.android:flexbox:0.3.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'

    //Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }

    //Retrofit and OkHttp for Networking
    implementation "com.squareup.retrofit2:retrofit:${retrofitLibVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitLibVersion}"
    //Logging Network Calls
    implementation "com.squareup.okhttp3:logging-interceptor:${loggingLibVersion}"

    //Binding Views
    implementation "com.jakewharton:butterknife:${butterknifeLibVer}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknifeLibVer}"

    //Swappable CardViews
    implementation "com.lorentzos.swipecards:library:${swipeCardsVersion}"

    //Picasso Image Library
    implementation "com.squareup.picasso:picasso:${picassoLibVersion}"

    //Lottie Animation Library
    implementation "com.airbnb.android:lottie:${lottieVersion}"

    //Palette API
    implementation "com.android.support:palette-v7:${supportLibVersion}"

    //Realm Adapter
    implementation "io.realm:android-adapters:${realmAdapterVersion}"
}
